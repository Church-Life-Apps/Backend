AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Serverless API stack for the Songs & Hymns app. Part of Church Life Apps.
Transform:
- AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 5

Parameters:
  Environment:
    Type: String
    Default: "dev"
    AllowedValues: 
      - "dev"
      - "prod"
  ApiDefinitionBucket:
    Type: String
    Default: "cla-songsandhymns-prod"
  ApiDefinitionKey:
    Type: String
    Default: "openApi/songs and hymns definition.json"

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  API:
    Type: AWS::Serverless::Api
    Properties:
      Name: "Songs & Hymns"
      StageName: "Prod"
      DefinitionUri: 
        Bucket: !Ref ApiDefinitionBucket
        Key: !Ref ApiDefinitionKey
      EndpointConfiguration: 
        Type: REGIONAL
      Tags:
        Project: "HymnalApp"

  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  SongsAndHymnsLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "SongsAndHymnsLambdaRole"
      Description: "Defines the role which can be assumed by Lambdas for the Songs and Hymns API"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole

  # This is a Lambda function config associated with the source code: get-all-items.js
  SongsAndHymnsApiLambdaFunction:
    Type: AWS::Serverless::Function
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: true
        EntryPoints: 
        - src/lambdahandlers.ts
    Properties:
      FunctionName: !Sub SongsHymns-${Environment}
      Description: Production Songs & Hymns API
      CodeUri: .
      Handler: src/lambdahandlers.lambdaRequestHandler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Environment:
        Variables:
          PG_HOST: !Sub '{{resolve:secretsmanager:${Environment}/songs-and-hymns/db-api-user-credentials:SecretString:host}}'
          PG_PORT: !Sub '{{resolve:secretsmanager:${Environment}/songs-and-hymns/db-api-user-credentials:SecretString:port}}'
          PG_DATABASE: !Sub '{{resolve:secretsmanager:${Environment}/songs-and-hymns/db-api-user-credentials:SecretString:dbname}}'
          PG_USER: !Sub '{{resolve:secretsmanager:${Environment}/songs-and-hymns/db-api-user-credentials:SecretString:username}}'
          PG_PASSWORD: !Sub '{{resolve:secretsmanager:${Environment}/songs-and-hymns/db-api-user-credentials:SecretString:password}}'
      Role: !GetAtt SongsAndHymnsLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds: 
          - sg-0c785c7d83f7ea6a4
        SubnetIds:
          - subnet-091dc4a61d1cf1bba
          - subnet-0d17204e657654d55
