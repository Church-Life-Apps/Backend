{"version":3,"file":"static/js/main.437bf425.js","mappings":"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","sources":["styles/GlobalStyles.ts","services/SongsApi.ts","components/SongbookList.tsx","screens/HomeScreen.tsx","components/SongList.tsx","screens/SongListScreen.tsx","models/SongsApiModels.ts","utils/StringUtils.ts","utils/LyricUtils.ts","components/LyricComponent.tsx","models/TempApiObjects.ts","screens/SongScreen.tsx","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { StyleSheet } from \"react-native\";\nimport { StatusBar } from \"react-native\";\n\nexport const globalStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 16,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport const listStyles = StyleSheet.create({\n  // the list container\n  list: {\n    // 100% width otherwise the scrollable area for the list is only where the items themselves are\n    width: \"100%\",\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  // the inner list container. Items are placed in here\n  contentContainer: {\n    alignSelf: \"center\",\n    maxWidth: 400,\n  },\n  // Individual list item\n  item: {\n    paddingVertical: 16,\n    paddingHorizontal: 12,\n    marginVertical: 4,\n    marginHorizontal: 16,\n    backgroundColor: \"#fff\",\n    borderColor: \"#4a4a4a\",\n    borderRadius: 4,\n    borderWidth: 1,\n    borderLeftWidth: 8,\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n  },\n  // Smaller, gray colored text. Used for author\n  subTitle: {\n    fontSize: 12,\n    color: \"#4a4a4a\",\n  },\n});\n\nexport const lyricStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: \"#fff\",\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 8,\n  },\n  author: {\n    fontSize: 18,\n    fontStyle: \"italic\",\n    marginBottom: 16,\n  },\n  lyrics: {\n    fontSize: 16,\n    lineHeight: 24,\n    marginBottom: 16,\n    marginLeft: 20,\n  },\n  verseTitle: {\n    fontSize: 16,\n    lineHeight: 24,\n    fontWeight: \"bold\",\n  },\n});\n","import { Song, Songbook, SongWithLyrics } from \"../models/SongsApiModels\";\n\nconst baseUrl = \"https://songs-wzfmn.ondigitalocean.app/api\";\n\nexport async function fetchSongbooks(): Promise<Songbook[]> {\n  return await fetch(`${baseUrl}/songbooks`).then((response) => response.json());\n}\n\nexport async function fetchSongs(songbookId: string): Promise<Song[]> {\n  return await fetch(`${baseUrl}/songs?songbookId=${songbookId}`).then((response) => response.json());\n}\n\nexport async function fetchSongDetails(songbookId: string, songNumber: number): Promise<SongWithLyrics> {\n  return await fetch(`${baseUrl}/song?songbookId=${songbookId}&number=${songNumber}`).then((response) =>\n    response.json()\n  );\n}\n","import React from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport { listStyles } from \"../styles/GlobalStyles\";\n\nconst BookItem = ({ songbook, onPress }) => (\n  <TouchableOpacity onPress={onPress} style={[listStyles.item]}>\n    <Text style={[listStyles.title]}>{songbook.fullName}</Text>\n  </TouchableOpacity>\n);\n\nconst SongbookList = ({ songbooks, onPress }) => {\n  return (\n    <FlatList\n      data={songbooks}\n      renderItem={({ item: songbook }) => <BookItem songbook={songbook} onPress={() => onPress(songbook)} />}\n      keyExtractor={(item) => item.id}\n      style={listStyles.list}\n      contentContainerStyle={listStyles.contentContainer}\n    />\n  );\n};\n\nexport default SongbookList;\n","import React, { useEffect, useState } from \"react\";\nimport { ActivityIndicator, SafeAreaView } from \"react-native\";\nimport { globalStyles } from \"../styles/GlobalStyles\";\nimport { Songbook } from \"../models/SongsApiModels\";\nimport { fetchSongbooks } from \"../services/SongsApi\";\nimport SongbookList from \"../components/SongbookList\";\n\nconst HomeScreen = ({ navigation}) => {\n  const [isLoading, setLoading] = useState<Boolean>(true);\n  const [data, setData] = useState<Songbook[]>([]);\n\n  const getSongbooks = async () => {\n    const songbooks = await fetchSongbooks();\n    setData(songbooks);\n    setLoading(false);\n  };\n\n  const navigateToSonglist = (songbook: Songbook) => {\n    navigation.navigate(\"Songlist\", {\n      songbookId: songbook.id,\n      title: songbook.fullName,\n    });\n  };\n\n  useEffect(() => {\n    getSongbooks();\n  }, []);\n\n  return (\n    <SafeAreaView style={globalStyles.container}>\n      {isLoading ? <ActivityIndicator /> : <SongbookList songbooks={data} onPress={navigateToSonglist}></SongbookList>}\n    </SafeAreaView>\n  );\n};\n\nexport default HomeScreen;\n","import React from \"react\";\nimport { FlatList, Text, TouchableOpacity } from \"react-native\";\nimport { listStyles } from \"../styles/GlobalStyles\";\n\nconst SongItem = ({ song, onPress }) => (\n  <TouchableOpacity onPress={onPress} style={[listStyles.item]}>\n    <Text style={[listStyles.title]}>\n      {song.number}. {song.title}\n    </Text>\n    <Text style={[listStyles.subTitle]}>{song.author}</Text>\n  </TouchableOpacity>\n);\n\nconst SongList = ({ songs, songbookFullName, onPress}) => {\n  return (\n    <FlatList\n      data={songs}\n      renderItem={({ item: song }) => <SongItem song={song} onPress={() => onPress(song, songbookFullName )} />}\n      keyExtractor={(item) => item.number}\n      style={listStyles.list}\n      contentContainerStyle={listStyles.contentContainer}\n    />\n  );\n};\n\nexport default SongList;\n","import React, { useEffect, useState } from \"react\";\nimport { ActivityIndicator, SafeAreaView } from \"react-native\";\nimport { globalStyles } from \"../styles/GlobalStyles\";\nimport { Song } from \"../models/SongsApiModels\";\nimport { fetchSongs } from \"../services/SongsApi\";\nimport SongList from \"../components/SongList\";\n\nconst SongListScreen = ({ navigation, route }) => {\n  const [isLoading, setLoading] = useState<Boolean>(true);\n  const [data, setData] = useState<Song[]>([]);\n\n  const songbookId = route.params.songbookId;\n  const songbookFullName = route.params.title;\n\n  const loadSongs = async () => {\n    const songs = await fetchSongs(songbookId);\n    setData(songs);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    loadSongs();\n  }, []);\n\n  const navigateToSong = (song: Song, songbookFullName: string) => {\n    navigation.navigate(\"Song\", {\n      songbookId: song.songbookId,\n      number: song.number,\n      title: `${songbookFullName} #${song.number}`,\n    });\n  };\n\n  return (\n    <SafeAreaView style={globalStyles.container}>\n      {isLoading ? (\n        <ActivityIndicator />\n      ) : (\n        <SongList songs={data} songbookFullName={songbookFullName} onPress={navigateToSong} />\n      )}\n    </SafeAreaView>\n  );\n};\n\nexport default SongListScreen;\n","// Data object for individual songbook in Songbooks List API\nexport interface Songbook {\n  id: string;\n  fullName: string;\n  staticMetadataLink: string;\n  imageUrl: string;\n}\n\n// Data object for individual song in songlist, so we have a songlist, and also the view when we click on a song which shows us either the sheet music or just the lyrics depending on what mode we choose. I'm going to call them SHEET MUSIC and LYRIC mode.\nexport interface Song {\n  id: string; // uuid\n  songbookId: string;\n  number: number;\n  title: string;\n  author: string;\n  music: string;\n  presentationOrder: string /* this won't be shown in the songlist UI, but is required to order the verses of the lyrics in LYRIC mode */;\n  imageUrl: string /* optional image of the sheet music as not every song will have sheet music */;\n  audioUrl: string /* optional audio recording of the song */;\n}\n\n// Lyric Type Enum\nexport enum LyricType {\n  LYRIC_TYPE_VERSE = \"LYRIC_TYPE_VERSE\",\n  LYRIC_TYPE_PRECHORUS = \"LYRIC_TYPE_PRECHORUS\",\n  LYRIC_TYPE_CHORUS = \"LYRIC_TYPE_CHORUS\",\n  LYRIC_TYPE_BRIDGE = \"LYRIC_TYPE_BRIDGE\",\n}\n\n// Data object for Lyrics\nexport interface Lyric {\n  songId: string; // uuid\n  lyricType: LyricType;\n  verseNumber: number;\n  lyrics: string;\n}\n\n// Data object for Songs with Lyrics\nexport interface SongWithLyrics {\n  song: Song;\n  lyrics: Lyric[];\n}\n\n// Data object for Pending Songs\nexport interface PendingSong {\n  id: string; // uuid\n  songbookId: string;\n  number: number;\n  title: string;\n  author: string;\n  music: string;\n  presentationOrder: string;\n  imageUrl: string;\n  audioUrl: string;\n  lyrics: Lyric[];\n  requesterName: string;\n  requesterEmail: string;\n  requesterNote: string;\n}\n\n// after pressing create new songbook in Songbooks List UI\nexport function toSongbook(data: any): Songbook {\n  return {\n    id: data.id ?? \"\",\n    fullName: data.fullName ?? \"\",\n    staticMetadataLink: data.staticMetadataLink ?? \"\",\n    imageUrl: data.imageUrl ?? \"\",\n  };\n}\n","/**\n * Util functions for strings.\n */\n\n/**\n * Removes special characters from the string.\n */\nexport function removePunctuation(s: string): string {\n  return s.replace(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g, \"\");\n}\n\n/**\n * Replaces occurences of 2 or more spaces with a single space.\n */\nexport function removeDoubleSpaces(s: string): string {\n  return s.replace(/\\s{2,}/g, \" \");\n}\n\n/**\n * Removes content within square brackets of a string.\n * (chatgpt code)\n */\nexport function removeSquareBrackets(str: string): string {\n  let output = \"\";\n  let count = 0;\n\n  for (const char of str) {\n    if (char === \"[\") count++;\n    else if (char === \"]\" && count) count--;\n    else if (!count) output += char;\n  }\n\n  return output;\n}\n","import { LyricBlock } from \"../models/LocalModels\";\nimport { Lyric, LyricType, SongWithLyrics } from \"../models/SongsApiModels\";\nimport { removeDoubleSpaces, removePunctuation, removeSquareBrackets } from \"./StringUtils\";\n\n/**\n * Converts a SongWithLyrics object to a LyricBlock List for visualizing the right lyrics in the right order.\n */\nexport function convertSongToLyricBlocks(songWithLyrics: SongWithLyrics, skipDuplicates: boolean): LyricBlock[] {\n  // Get presentation order of lyrics for the song.\n  const presentationOrder = getPresentationOrder(songWithLyrics.song.presentationOrder, skipDuplicates);\n  const lyrics = songWithLyrics.lyrics;\n\n  // Create a map of presentation order string to LyricBlock using just the lyrics of the song object\n  // ie: \"v1\" -> {<lyric block object>}\n  let lyricsMap = new Map<string, LyricBlock>();\n\n  for (let i = 0; i < lyrics.length; i++) {\n    const lyric = lyrics[i];\n    const verseShorthand = getVerseShorthand(lyric);\n    const lyricBlock: LyricBlock = {\n      verseShorthand: verseShorthand,\n      verseTitle: getVerseTitle(lyrics, i),\n      lyrics: removeSquareBrackets(lyric.lyrics),\n    };\n    lyricsMap.set(verseShorthand, lyricBlock);\n  }\n\n  // Create an array of LyricBlock objects and add to it based on presentationOrder.\n  let lyricBlocks: LyricBlock[] = [];\n  for (let i = 0; i < presentationOrder.length; i++) {\n    const block = lyricsMap.get(presentationOrder[i]);\n    if (block != null) {\n      lyricBlocks.push(block);\n    }\n  }\n\n  // In case presentation order does not contain all the verses available to the song,\n  // for added robustness, add all unused lyrics to the back of the lyric block list.\n  for (let i = 0; i < presentationOrder.length; i++) {\n    lyricsMap.delete(presentationOrder[i]);\n  }\n  for (let leftoverLyric of lyricsMap.values()) {\n    lyricBlocks.push(leftoverLyric);\n  }\n\n  // Return the final set of lyric blocks.\n  return lyricBlocks;\n}\n\n/**\n * Turns presentation order string to the corresponding array of shorthand verse names.\n */\nexport function getPresentationOrder(presentationOrderString: string, skipDuplicates: boolean): string[] {\n  const verseList = removePunctuation(removeDoubleSpaces(presentationOrderString.trim())).split(\" \");\n  if (skipDuplicates) {\n    return [...new Set(verseList)];\n  } else {\n    return verseList;\n  }\n}\n\n/**\n * Converts LyricType object to its string form\n */\nexport function lyricTypeToString(lyricType: LyricType): string {\n  if (lyricType === LyricType.LYRIC_TYPE_BRIDGE) {\n    return \"Bridge\";\n  } else if (lyricType === LyricType.LYRIC_TYPE_CHORUS) {\n    return \"Chorus\";\n  } else if (lyricType === LyricType.LYRIC_TYPE_PRECHORUS) {\n    return \"Pre-Chorus\";\n  } else {\n    return \"Verse\";\n  }\n}\n\n/**\n * Parses the verse shorthand out of a Lyric object.\n */\nexport function getVerseShorthand(lyric: Lyric): string {\n  let lyricType = \"\";\n  if (lyric.lyricType === LyricType.LYRIC_TYPE_BRIDGE) {\n    lyricType = \"b\";\n  } else if (lyric.lyricType === LyricType.LYRIC_TYPE_CHORUS) {\n    lyricType = \"c\";\n  } else if (lyric.lyricType === LyricType.LYRIC_TYPE_PRECHORUS) {\n    lyricType = \"p\";\n  } else {\n    lyricType = \"v\";\n  }\n  return lyricType + lyric.verseNumber;\n}\n\n/**\n * Gets the verse title from a list of lyrics and index.\n * With knowledge of the whole list this function makes 1 optimization by omitting the number if\n * there is only 1 type of that lyricType in the song.\n * ie: Chorus 1 is only needed if there are multiple choruses. If there's only 1 we can omit the \"1\" and just say \"Chorus\"\n */\nexport function getVerseTitle(lyrics: Lyric[], index: number): string {\n  const lyricInQuestion = lyrics[index];\n\n  const lyricType = lyricInQuestion.lyricType;\n\n  let containsMultipleOfThisLyricType = false;\n  for (let i = 0; i < lyrics.length; i++) {\n    const currentLyric = lyrics[i];\n    if (i != index && currentLyric.lyricType == lyricType) {\n      containsMultipleOfThisLyricType = true;\n      break;\n    }\n  }\n  const lyricTypeString = lyricTypeToString(lyricType);\n  if (containsMultipleOfThisLyricType) {\n    return `${lyricTypeString} ${lyricInQuestion.verseNumber}`;\n  } else {\n    return lyricTypeString;\n  }\n}\n","import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { SongWithLyrics } from \"../models/SongsApiModels\";\nimport { lyricStyles } from \"../styles/GlobalStyles\";\nimport { convertSongToLyricBlocks } from \"../utils/LyricUtils\";\n\n// Define the component props\ninterface LyricComponentProps {\n  songData: SongWithLyrics;\n  removeDuplicates: boolean;\n}\n\nconst LyricComponent: React.FC<LyricComponentProps> = ({ songData, removeDuplicates }) => {\n  const song = songData.song;\n  const lyricBlocks = convertSongToLyricBlocks(songData, removeDuplicates);\n\n  return (\n    <View style={lyricStyles.container}>\n      <Text style={lyricStyles.title}>{song.title}</Text>\n      <Text style={lyricStyles.author}>by {song.author}</Text>\n      {lyricBlocks.map((lyric, index) => (\n        <View key={`View ${index}`}>\n          <Text key={`${index}:verseTitle`} style={lyricStyles.verseTitle}>\n            {lyric.verseTitle}\n          </Text>\n          <Text key={`${index}:${lyric.verseShorthand}`} style={lyricStyles.lyrics}>\n            {lyric.lyrics}\n          </Text>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default LyricComponent;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { Songbook, Song, Lyric, LyricType, SongWithLyrics } from \"./SongsApiModels\";\n\n// hard coded Data object for individual songbook in Songbooks List API\nexport const SHL: Songbook = {\n  id: \"shl\",\n  fullName: \"Songs and Hymns of Life\",\n  staticMetadataLink: \"https://github.com/Church-Life-Apps/Resources/blob/master/resources/metadata/shl.json\",\n  imageUrl: \"https://i0.wp.com/asweetsavor.org/wp-content/uploads/SHL-on-Piano-e1602105678283.jpg?fit=882%2C686&ssl=1\",\n};\n\n// hard coded Data object for individual song in songlist\nexport const TEST_SONG: Song = {\n  id: uuidv4(),\n  songbookId: \"shl\",\n  number: 1,\n  title: \"Great Is Thy Faithfulness\",\n  author: \"Thomas O. Chisholm\",\n  music: \"William Marion Runyan (1870-1957)\",\n  presentationOrder: \"v1 c1 v2 c1 v3 c1\",\n  imageUrl: \"https://raw.githubusercontent.com/Church-Life-Apps/Resources/master/resources/images/shl/SHL_010.png\",\n  audioUrl: \"https://raw.githubusercontent.com/brandonxia01/CodingClub/master/websites/piano/notes/c-4.mp3\",\n};\n\nexport const TEST_SONG_2: Song = {\n  id: uuidv4(),\n  songbookId: \"shl\",\n  number: 2,\n  title: \"Glory Be To God The Father\",\n  author: \"J. F. Garland\",\n  music: \"Ira David Sankey (1840-1908)\",\n  presentationOrder: \"v1 v2 v3 v4\",\n  imageUrl: \"https://raw.githubusercontent.com/Church-Life-Apps/Resources/master/resources/images/shl/SHL_002.png\",\n  audioUrl: \"https://raw.githubusercontent.com/brandonxia01/CodingClub/master/websites/piano/notes/c-4.mp3\",\n};\n\n// hard coded Data object for Lyrics\nexport const TEST_LYRIC_V1: Lyric = {\n  songId: uuidv4(),\n  lyricType: LyricType.LYRIC_TYPE_VERSE,\n  verseNumber: 1,\n  lyrics: `[Eb]\"Great is Thy [Ab]faithfulness,\" [Bb7]O God my [Ab/Eb]Fa[Eb]ther,\\n[Ab]There is no [Eb/G]shadow of [F/C]turn[C7]ing [F7]with [Bb]Thee;\\n[Bb7]Thou changest [Eb]not, Thy com[Eb]passions, they [Ab]fail not;\\n[Adim7]As Thou hast [Eb/Bb]been Thou forever [Bb7]wilt [Eb]be.`,\n};\nexport const TEST_LYRIC_V2: Lyric = {\n  songId: uuidv4(),\n  lyricType: LyricType.LYRIC_TYPE_VERSE,\n  verseNumber: 2,\n  lyrics: `Summer and winter, and springtime and harvest.\\nSun, moon and stars in their courses above,\\nJoin with all nature in manifold witness,\\nTo Thy great faithfulness, mercy and love.`,\n};\nexport const TEST_LYRIC_V3: Lyric = {\n  songId: uuidv4(),\n  lyricType: LyricType.LYRIC_TYPE_VERSE,\n  verseNumber: 3,\n  lyrics: `Pardon for sin and a peace that endureth.\\nThy own dear presence to cheer and to guide;\\nStrength for today and bright hope for tomorrow,\\nBlessings all mine, with ten thousand beside!`,\n};\nexport const TEST_CHORUS_C1: Lyric = {\n  songId: uuidv4(),\n  lyricType: LyricType.LYRIC_TYPE_CHORUS,\n  verseNumber: 1,\n  lyrics: `[Bb]\"Great is Thy [Ab/Eb]faithful[Eb]ness!\"\\n[C7]\"Great is Thy [Bbm/F]faithful[Fm]ness!\"\\n[Bb7]Morning by [Eb]morning new [Bb/F]mercies [F7]I [Bb]see;\\n[Bb7]All I have [Eb]needed Thy [Eb]hand [Fm]hath [Eb/G]pro[Fm]vided -\\n[Adim7]\"Great is Thy [Eb/Bb]faithfulness,\" Lord, [Bb7]unto [Eb]me!`,\n};\n\n// hard coded Data object for Songs with Lyrics\nexport const TEST_SONG_WITH_LYRIC: SongWithLyrics = {\n  song: TEST_SONG,\n  lyrics: [TEST_LYRIC_V1, TEST_LYRIC_V2, TEST_LYRIC_V3, TEST_CHORUS_C1],\n};\n\nexport const TEST_SONG_LIST: Song[] = [TEST_SONG, TEST_SONG_2];\n","import React, { useEffect, useState } from \"react\";\nimport { ActivityIndicator, SafeAreaView } from \"react-native\";\nimport { globalStyles } from \"../styles/GlobalStyles\";\nimport { SongWithLyrics } from \"../models/SongsApiModels\";\nimport { fetchSongDetails } from \"../services/SongsApi\";\nimport LyricComponent from \"../components/LyricComponent\";\nimport { TEST_SONG_WITH_LYRIC } from \"../models/TempApiObjects\";\n\nconst SongScreen = ({ route }) => {\n  const [isLoading, setLoading] = useState<Boolean>(true);\n  const [data, setData] = useState<SongWithLyrics>(TEST_SONG_WITH_LYRIC);\n\n  const songbookId = route.params.songbookId;\n  const songNumber = route.params.number;\n\n  const loadLyrics = async () => {\n    const lyrics = await fetchSongDetails(songbookId, songNumber);\n    setData(lyrics);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    loadLyrics();\n  }, []);\n\n  return (\n    <SafeAreaView style={globalStyles.container}>\n      {isLoading ? <ActivityIndicator /> : <LyricComponent songData={data} removeDuplicates={false}></LyricComponent>}\n    </SafeAreaView>\n  );\n};\n\nexport default SongScreen;\n","import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport SongListScreen from \"./screens/SongListScreen\";\nimport * as Linking from \"expo-linking\";\nimport SongScreen from \"./screens/SongScreen\";\n\nconst Stack = createNativeStackNavigator();\nconst prefix = Linking.createURL(\"/\");\nconst config = {\n  screens: {\n    Home: \"/\",\n    Songlist: \":songbookId\",\n    Song: \":songbookId/:number\",\n  },\n};\nconst linking = {\n  prefixes: [prefix],\n  config,\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer linking={linking}>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={() => ({ title: \"Select A Songbook!\" })} />\n        <Stack.Screen\n          name=\"Songlist\"\n          component={SongListScreen}\n          options={({ route }) => ({\n            title: route.params.title,\n            // TODO: Add permananent Back button to the header bar using headerLeft option to Home screen\n          })}\n        />\n        <Stack.Screen\n          name=\"Song\"\n          component={SongScreen}\n          options={({ route }) => ({\n            songbookId: route.params.songbookId,\n            number: route.params.number,\n            title: route.params.title,\n            // TODO: Add permananent Back button to the header bar using headerLeft option to Songlist screen\n          })}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [606], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["globalStyles","StyleSheet","container","flex","paddingHorizontal","backgroundColor","alignItems","justifyContent","listStyles","list","width","marginTop","StatusBar","contentContainer","alignSelf","maxWidth","item","paddingVertical","marginVertical","marginHorizontal","borderColor","borderRadius","borderWidth","borderLeftWidth","title","fontSize","fontWeight","subTitle","color","lyricStyles","padding","marginBottom","author","fontStyle","lyrics","lineHeight","marginLeft","verseTitle","baseUrl","_fetchSongbooks","_asyncToGenerator","fetch","then","response","json","apply","arguments","_fetchSongs","songbookId","_fetchSongDetails","songNumber","BookItem","_ref","songbook","onPress","_jsx","TouchableOpacity","style","children","Text","fullName","_ref2","songbooks","FlatList","data","renderItem","_ref3","keyExtractor","id","contentContainerStyle","navigation","_useState","useState","_useState2","_slicedToArray","isLoading","setLoading","_useState3","_useState4","setData","getSongbooks","fetchSongbooks","useEffect","SafeAreaView","ActivityIndicator","SongbookList","navigate","SongItem","song","_jsxs","number","songs","songbookFullName","route","params","loadSongs","_x","fetchSongs","SongList","LyricType","removeSquareBrackets","str","output","count","char","convertSongToLyricBlocks","songWithLyrics","skipDuplicates","presentationOrder","presentationOrderString","verseList","s","replace","removePunctuation","trim","split","_toConsumableArray","Set","getPresentationOrder","lyricsMap","Map","i","length","lyric","verseShorthand","getVerseShorthand","lyricBlock","getVerseTitle","set","lyricBlocks","block","get","push","delete","leftoverLyric","values","lyricType","LYRIC_TYPE_BRIDGE","LYRIC_TYPE_CHORUS","LYRIC_TYPE_PRECHORUS","verseNumber","index","lyricInQuestion","containsMultipleOfThisLyricType","currentLyric","lyricTypeString","lyricTypeToString","songData","removeDuplicates","View","map","TEST_SONG","uuidv4","music","imageUrl","audioUrl","TEST_SONG_WITH_LYRIC","songId","LYRIC_TYPE_VERSE","loadLyrics","_x2","_x3","fetchSongDetails","LyricComponent","Stack","createNativeStackNavigator","linking","prefixes","Linking","createURL","config","screens","Home","Songlist","Song","App","NavigationContainer","Navigator","Screen","name","component","HomeScreen","options","SongListScreen","SongScreen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}